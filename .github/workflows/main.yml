# 工作流程的名稱
name: Deploy to Cloud Run

# 觸發條件：當有程式碼推送到 main 分支時
on:
  push:
    branches:
      - main

# 環境變數，方便在整個工作流程中重複使用
env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }} # 從 GitHub Secrets 讀取 GCP 專案 ID
  GAR_LOCATION: asia-east1 # Google Artifact Registry 的位置，例如 asia-east1 (台灣)
  SERVICE_NAME: food-search-api # 您在 Cloud Run 上的服務名稱
  REGION: asia-east1 # 您 Cloud Run 服務的區域

jobs:
  deploy:
    # 指定此工作在最新的 Ubuntu 環境中運行
    runs-on: ubuntu-latest
    
    # 授予 GitHub Actions 寫入 Google Cloud 的權限
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      # 步驟 1: 從 GitHub 倉庫中取得您的程式碼
      - name: Checkout
        uses: actions/checkout@v4

      # 步驟 2: 使用 Workload Identity Federation 進行 GCP 驗證 (最安全的方式)
      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }}

      # 步驟 3: 設定 gcloud CLI
      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'

      # 步驟 4: 授權 Docker 可以推送到 Google Artifact Registry
      - name: Configure Docker
        run: gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev

      # 步驟 5: 建置 Docker 映像檔
      - name: Build Docker image
        run: docker build -t ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }} .

      # 步驟 6: 推送 Docker 映像檔至 Artifact Registry
      - name: Push Docker image
        run: docker push ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }}

      # 步驟 7: 部署新的映像檔至 Cloud Run
      - name: Deploy to Cloud Run
        id: deploy
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          service: ${{ env.SERVICE_NAME }}
          region: ${{ env.REGION }}
          # 指定要部署的映像檔
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }}
          # 將 GitHub Secrets 作為環境變數傳遞給 Cloud Run
          env_vars: |
            AZURE_OPENAI_ENDPOINT=${{ secrets.AZURE_OPENAI_ENDPOINT }}
            AZURE_OPENAI_API_KEY=${{ secrets.AZURE_OPENAI_API_KEY }}
            AZURE_OPENAI_EMBEDDING_DEPLOYMENT=${{ secrets.AZURE_OPENAI_EMBEDDING_DEPLOYMENT }}
            AZURE_OPENAI_API_VERSION=${{ secrets.AZURE_OPENAI_API_VERSION }}
            QDRANT_URL=${{ secrets.QDRANT_URL }}
            QDRANT_API_KEY=${{ secrets.QDRANT_API_KEY }}
            DB_TYPE=${{ secrets.DB_TYPE }}
            DB_DRIVER=${{ secrets.DB_DRIVER }}
            DB_DATABASE=${{ secrets.DB_DATABASE }}
            DB_HOST=${{ secrets.DB_HOST }}
            DB_USER=${{ secrets.DB_USER }}
            DB_MYSQL_PASSWORD=${{ secrets.DB_MYSQL_PASSWORD }}
            DB_MYSQL_NAME=${{ secrets.DB_MYSQL_NAME }}

      # 步驟 8: 輸出部署後的服務網址
      - name: Show Output
        run: echo "Successfully deployed to ${{ steps.deploy.outputs.url }}"
